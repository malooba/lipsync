<!--
Copyright 2016 Malooba Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:maloobaFingerprint="clr-namespace:MaloobaFingerprint"
        x:Class="MaloobaFingerprint.MainWindow" 
        mc:Ignorable="d" 
        Title=""
        Name="Window" 
        SizeToContent="Width" 
        Height="160" 
        WindowStyle="SingleBorderWindow"
        ResizeMode="NoResize"
        Background="{StaticResource BackgroundBrush}"
        DataContext="{Binding Source={StaticResource Locator}}">

    <Grid Width="Auto" Height="240" Margin="10">
        <!-- Animation of config window -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup Name="ShowHideConfig">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.3" />
                </VisualStateGroup.Transitions>
                <VisualState Name="HideConfig">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="Window">
                            <EasingDoubleKeyFrame KeyTime="0" Value="160" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState Name="ShowConfig">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="Window">
                            <EasingDoubleKeyFrame KeyTime="0" Value="300" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
       
        <Grid.RowDefinitions>
            <RowDefinition Height="1.0*" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="3.5*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Image Source="pack://application:,,,/Resources/MaloobaFingerprintAlpha.png" Height="22" RenderOptions.BitmapScalingMode="HighQuality"/>
            <RadioButton Name="Settings" Style="{DynamicResource RadioTextStyle}" GroupName="Mode" Content="Settings" Command="{Binding Main.ConfigCommand}" Grid.Column="3">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <ei:GoToStateAction StateName="ShowConfig" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <ei:GoToStateAction StateName="HideConfig" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </RadioButton>
            <RadioButton Name="Off" Style="{DynamicResource RadioTextStyle}" GroupName="Mode" Content="Off" Command="{Binding Main.OffCommand}" Grid.Column="4" IsChecked="{Binding Main.OffMode}" />
            <RadioButton Name="Run" Style="{DynamicResource RadioTextStyle}" GroupName="Mode" Content="Run" Command="{Binding Main.RunCommand}" Grid.Column="5" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Label Name="LabelTimecode" Content="{Binding Main.Timecode}" Grid.Row="0" Foreground="{StaticResource TextColourBrush}" Background="{DynamicResource DarkerBrush}" BorderBrush="{StaticResource BorderColourBrush}" BorderThickness="2" VerticalContentAlignment="Top" FontSize="20" />
                <Label Name="LabelDevice" Content="{Binding Configuration.Device.Name}" Grid.Row="1" Foreground="{StaticResource TextColourBrush}" Background="{DynamicResource BackgroundBrush}" FontSize="10" />
            </Grid>
            <ItemsControl ItemsSource="{Binding Main.Channels}" Grid.Column="1">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <maloobaFingerprint:ChannelControl />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
        <TabControl x:Name="ConfigTabs" Grid.Row="2" Background="{StaticResource BackgroundBrush}" DataContext="{Binding Path=Configuration, Source={StaticResource Locator}}" SelectedIndex="{Binding SelectedTabIndex, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabPanel}">
                    <Setter Property="Background" Value="Green"></Setter>
                </Style>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource TextColourBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource DarkerBrush}"/>
                </Style>
            </TabControl.Resources>
            <TabItem>
                <TabItem.Header>
                    <Label Content="Input" />
                </TabItem.Header>
                <AdornerDecorator>
                    <Grid Margin="0,10,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Name="LabelDevices" Grid.Row="0" Grid.Column="0" Content="Decklink Device" Foreground="{StaticResource TextColourBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <ComboBox Name="Devices" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Devices}" SelectedItem="{Binding Device, ValidatesOnDataErrors=True}" DisplayMemberPath="Name" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" IsReadOnly="True" Validation.ErrorTemplate="{StaticResource ResourceKey=ErrorText}" Grid.ColumnSpan="2" />
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="Video"/>
                </TabItem.Header>
                <AdornerDecorator>
                    <Grid Margin="0,10,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Name="LabelVideoMode" Grid.Row="0" Grid.Column="0" Content="Video Mode" Foreground="{StaticResource TextColourBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <Label Name="LabelTimecodeMode" Grid.Row="1" Grid.Column="0" Content="Timecode Mode" Foreground="{StaticResource TextColourBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <ComboBox Name="VideoMode" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding VideoModes}" SelectedItem="{Binding VideoMode}" DisplayMemberPath="Name" HorizontalAlignment="Left" Margin="0,0,0,20" VerticalAlignment="Top" Width="170" IsReadOnly="True" SelectedIndex="0" />
                        <ComboBox Name="TimecodeMode" Grid.Row="1" Grid.Column="1" ItemsSource="{Binding TimecodeModes}" SelectedItem="{Binding TimecodeMode}" DisplayMemberPath="Name" HorizontalAlignment="Left" Margin="0,0,0,20" VerticalAlignment="Top" Width="170" IsReadOnly="True" SelectedIndex="0" />
                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="Output" />
                </TabItem.Header>
                <AdornerDecorator>
                    <Grid Margin="0,10,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Name="LabelHost" Grid.Row="0" Grid.Column="0" Content="Host" Foreground="{StaticResource TextColourBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <Label Name="LabelPort" Grid.Row="1" Grid.Column="0" Content="Port" Foreground="{StaticResource TextColourBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <TextBox Name="Host" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Host, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="0,0,0,20" Validation.ErrorTemplate="{StaticResource ResourceKey=ErrorText}" />
                        <TextBox Name="Port" Grid.Row="1" Grid.Column="1" Text="{Binding Path=Port, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="0,0,0,20" Validation.ErrorTemplate="{StaticResource ResourceKey=ErrorText}" />
                    </Grid>
                </AdornerDecorator>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
